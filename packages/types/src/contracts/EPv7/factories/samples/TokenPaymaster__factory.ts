/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  TokenPaymaster,
  TokenPaymasterInterface,
  OracleHelper,
  UniswapHelper,
} from "../../samples/TokenPaymaster";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "_token",
        type: "address",
      },
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_wrappedNative",
        type: "address",
      },
      {
        internalType: "contract ISwapRouter",
        name: "_uniswap",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "priceMarkup",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "minEntryPointBalance",
            type: "uint128",
          },
          {
            internalType: "uint48",
            name: "refundPostopCost",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "priceMaxAge",
            type: "uint48",
          },
        ],
        internalType: "struct TokenPaymaster.TokenPaymasterConfig",
        name: "_tokenPaymasterConfig",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint48",
            name: "cacheTimeToLive",
            type: "uint48",
          },
          {
            internalType: "contract IOracle",
            name: "tokenOracle",
            type: "address",
          },
          {
            internalType: "contract IOracle",
            name: "nativeOracle",
            type: "address",
          },
          {
            internalType: "bool",
            name: "tokenToNativeOracle",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "tokenOracleReverse",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "nativeOracleReverse",
            type: "bool",
          },
          {
            internalType: "uint48",
            name: "priceUpdateThreshold",
            type: "uint48",
          },
        ],
        internalType: "struct OracleHelper.OracleHelperConfig",
        name: "_oracleHelperConfig",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "minSwapAmount",
            type: "uint256",
          },
          {
            internalType: "uint24",
            name: "uniswapPoolFee",
            type: "uint24",
          },
          {
            internalType: "uint8",
            name: "slippage",
            type: "uint8",
          },
        ],
        internalType: "struct UniswapHelper.UniswapHelperConfig",
        name: "_uniswapHelperConfig",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "priceMarkup",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "minEntryPointBalance",
            type: "uint128",
          },
          {
            internalType: "uint48",
            name: "refundPostopCost",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "priceMaxAge",
            type: "uint48",
          },
        ],
        indexed: false,
        internalType: "struct TokenPaymaster.TokenPaymasterConfig",
        name: "tokenPaymasterConfig",
        type: "tuple",
      },
    ],
    name: "ConfigUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Received",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "currentPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cachedPriceTimestamp",
        type: "uint256",
      },
    ],
    name: "TokenPriceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
    ],
    name: "UniswapReverted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualTokenCharge",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualTokenPrice",
        type: "uint256",
      },
    ],
    name: "UserOperationSponsored",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "cachedPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cachedPriceTimestamp",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPaymaster.PostOpMode",
        name: "mode",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "actualUserOpFeePerGas",
        type: "uint256",
      },
    ],
    name: "postOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "priceMarkup",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "minEntryPointBalance",
            type: "uint128",
          },
          {
            internalType: "uint48",
            name: "refundPostopCost",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "priceMaxAge",
            type: "uint48",
          },
        ],
        internalType: "struct TokenPaymaster.TokenPaymasterConfig",
        name: "_tokenPaymasterConfig",
        type: "tuple",
      },
    ],
    name: "setTokenPaymasterConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "minSwapAmount",
            type: "uint256",
          },
          {
            internalType: "uint24",
            name: "uniswapPoolFee",
            type: "uint24",
          },
          {
            internalType: "uint8",
            name: "slippage",
            type: "uint8",
          },
        ],
        internalType: "struct UniswapHelper.UniswapHelperConfig",
        name: "_uniswapHelperConfig",
        type: "tuple",
      },
    ],
    name: "setUniswapConfiguration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "tokenToWei",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswap",
    outputs: [
      {
        internalType: "contract ISwapRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "force",
        type: "bool",
      },
    ],
    name: "updateCachedPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "accountGasLimits",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct PackedUserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "maxCost",
        type: "uint256",
      },
    ],
    name: "validatePaymasterUserOp",
    outputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "weiToToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wrappedNative",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6101206040523480156200001257600080fd5b50604051620032223803806200322283398101604081905262000035916200096b565b828887878b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000078573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200009e919062000a81565b620000ab90600a62000bbb565b868c3380620000d557604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b620000e08162000205565b50620000ec8162000255565b6001600160a01b0390811660805260405163095ea7b360e01b8152848216600482015260001960248201529086169063095ea7b3906044016020604051808303816000875af115801562000144573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200016a919062000bcc565b506001600160a01b0380861660c05284811660e052831660a052610100829052620001c881805160015560208101516002805460409093015160ff1663010000000263ffffffff1990931662ffffff90921691909117919091179055565b505060001960035550620001e0915082905062000318565b50620001ec8462000579565b620001f78162000706565b505050505050505062000c04565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516301ffc9a760e01b8152639d95230160e01b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa158015620002a1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002c7919062000bcc565b620003155760405162461bcd60e51b815260206004820152601e60248201527f49456e747279506f696e7420696e74657266616365206d69736d6174636800006044820152606401620000cc565b50565b805160058054602084015165ffffffffffff9384166001600160d01b03199092169190911766010000000000006001600160a01b0392831602179091556040830151600680546060860151608087015160a088015160c0890151959096166001600160a81b031990931692909217600160a01b911515919091021761ffff60a81b1916600160a81b9115159190910260ff60b01b191617600160b01b931515939093029290921765ffffffffffff60b81b1916600160b81b91909316908102929092179055620f42401015620004315760405162461bcd60e51b815260206004820152601e60248201527f54504d3a20757064617465207468726573686f6c6420746f6f206869676800006044820152606401620000cc565b600560000160069054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000488573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004ae919062000a81565b620004bb90600a62000bbb565b600780546001600160801b0319166001600160801b03929092169190911790556006546040805163313ce56760e01b815290516001600160a01b039092169163313ce567916004808201926020929091908290030181865afa15801562000526573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200054c919062000a81565b6200055990600a62000bbb565b600780546001600160801b03928316600160801b02921691909117905550565b6200058362000747565b6200059b6a52b7d2dcc80cd2e4000000600262000bea565b81511115620005ed5760405162461bcd60e51b815260206004820152601a60248201527f54504d3a207072696365206d61726b757020746f6f20686967680000000000006044820152606401620000cc565b80516a52b7d2dcc80cd2e400000011156200064b5760405162461bcd60e51b815260206004820152601960248201527f54504d3a207072696365206d61726b757020746f6f206c6f77000000000000006044820152606401620000cc565b805160088190556020808301805160098054604080880180516060808b01805165ffffffffffff908116600160b01b0265ffffffffffff60b01b19948216600160801b026001600160b01b03199098166001600160801b039a8b161797909717939093169590951790955582519889529551909416958701959095529151831685850152905190911690830152517fcd938817f1c47094d43be3d07e8c67e11766db2e11a2b4376e7ee937b15793a29181900360800190a150565b6200071062000747565b6001600160a01b0381166200073c57604051631e4fbdf760e01b815260006004820152602401620000cc565b620003158162000205565b6000546001600160a01b03163314620007765760405163118cdaa760e01b8152336004820152602401620000cc565b565b6001600160a01b03811681146200031557600080fd5b604051608081016001600160401b0381118282101715620007bf57634e487b7160e01b600052604160045260246000fd5b60405290565b805165ffffffffffff81168114620007dc57600080fd5b919050565b80518015158114620007dc57600080fd5b600060e082840312156200080557600080fd5b60405160e081016001600160401b03811182821017156200083657634e487b7160e01b600052604160045260246000fd5b6040529050806200084783620007c5565b81526020830151620008598162000778565b602082015260408301516200086e8162000778565b60408201526200088160608401620007e1565b60608201526200089460808401620007e1565b6080820152620008a760a08401620007e1565b60a0820152620008ba60c08401620007c5565b60c08201525092915050565b805160ff81168114620007dc57600080fd5b600060608284031215620008eb57600080fd5b604051606081016001600160401b03811182821017156200091c57634e487b7160e01b600052604160045260246000fd5b806040525080915082518152602083015162ffffff811681146200093f57600080fd5b60208201526200095260408401620008c6565b60408201525092915050565b8051620007dc8162000778565b600080600080600080600080888a036102608112156200098a57600080fd5b8951620009978162000778565b60208b0151909950620009aa8162000778565b60408b0151909850620009bd8162000778565b60608b0151909750620009d08162000778565b95506080607f1982011215620009e557600080fd5b50620009f06200078e565b60808a0151815260a08a01516001600160801b038116811462000a1257600080fd5b602082015262000a2560c08b01620007c5565b604082015262000a3860e08b01620007c5565b6060820152935062000a4f8a6101008b01620007f2565b925062000a618a6101e08b01620008d8565b915062000a726102408a016200095e565b90509295985092959890939650565b60006020828403121562000a9457600080fd5b62000a9f82620008c6565b9392505050565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111562000afd57816000190482111562000ae15762000ae162000aa6565b8085161562000aef57918102915b93841c939080029062000ac1565b509250929050565b60008262000b165750600162000bb5565b8162000b255750600062000bb5565b816001811462000b3e576002811462000b495762000b69565b600191505062000bb5565b60ff84111562000b5d5762000b5d62000aa6565b50506001821b62000bb5565b5060208310610133831016604e8410600b841016171562000b8e575081810a62000bb5565b62000b9a838362000abc565b806000190482111562000bb15762000bb162000aa6565b0290505b92915050565b600062000a9f60ff84168362000b05565b60006020828403121562000bdf57600080fd5b62000a9f82620007e1565b808202811582820484141762000bb55762000bb562000aa6565b60805160a05160c05160e0516101005161256562000cbd60003960005050600081816104620152611a8b0152600081816104ec0152818161090f015281816113b101528181611596015281816115d0015261184601526000818161020c01528181611af70152611ba70152600081816103860152818161054a01528181610614015281816109a601528181610a7301528181610afd01528181610bb0015281816111f2015281816117a001526118a401526125656000f3fe6080604052600436106101845760003560e01c8063b0d691fe116100d6578063e1d8153c1161007f578063f2fde38b11610059578063f2fde38b146104a4578063f60fdcb3146104c4578063fc0c546a146104da57600080fd5b8063e1d8153c1461041a578063eb6d3a1114610450578063f14d64ed1461048457600080fd5b8063c399ec88116100b0578063c399ec88146103dd578063d0e30db0146103f2578063d7a23b3c146103fa57600080fd5b8063b0d691fe14610374578063bb9fe6bf146103a8578063c23a5cea146103bd57600080fd5b8063715018a6116101385780638da5cb5b116101125780638da5cb5b146103095780639e281a9814610334578063a0840fa71461035457600080fd5b8063715018a6146102b45780637c627b21146102c95780637c986aac146102e957600080fd5b80632681f7e4116101695780632681f7e4146101fa5780633ba9290f14610258578063703ae88f1461028657600080fd5b80630396cb60146101c5578063205c2878146101da57600080fd5b366101c05760405134815233907f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f885258749060200160405180910390a2005b600080fd5b6101d86101d3366004611ec5565b61050e565b005b3480156101e657600080fd5b506101d86101f5366004611f0d565b6105c0565b34801561020657600080fd5b5061022e7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b34801561026457600080fd5b50610278610273366004611f47565b610658565b60405190815260200161024f565b34801561029257600080fd5b506102a66102a1366004611f64565b610884565b60405161024f929190611fdc565b3480156102c057600080fd5b506101d86108a7565b3480156102d557600080fd5b506101d86102e4366004612035565b6108bb565b3480156102f557600080fd5b506102786103043660046120cd565b6108d7565b34801561031557600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff1661022e565b34801561034057600080fd5b506101d861034f366004611f0d565b610902565b34801561036057600080fd5b506101d861036f3660046120ef565b610939565b34801561038057600080fd5b5061022e7f000000000000000000000000000000000000000000000000000000000000000081565b3480156103b457600080fd5b506101d861099c565b3480156103c957600080fd5b506101d86103d836600461218d565b610a26565b3480156103e957600080fd5b50610278610acc565b6101d8610b82565b34801561040657600080fd5b506102786104153660046120cd565b610c0a565b34801561042657600080fd5b506004546104399065ffffffffffff1681565b60405165ffffffffffff909116815260200161024f565b34801561045c57600080fd5b5061022e7f000000000000000000000000000000000000000000000000000000000000000081565b34801561049057600080fd5b506101d861049f3660046121c5565b610c22565b3480156104b057600080fd5b506101d86104bf36600461218d565b610e37565b3480156104d057600080fd5b5061027860035481565b3480156104e657600080fd5b5061022e7f000000000000000000000000000000000000000000000000000000000000000081565b610516610e98565b6040517f0396cb6000000000000000000000000000000000000000000000000000000000815263ffffffff821660048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690630396cb609034906024016000604051808303818588803b1580156105a457600080fd5b505af11580156105b8573d6000803e3d6000fd5b505050505050565b6105c8610e98565b6040517f205c287800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8381166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063205c287890604401600060405180830381600087803b1580156105a457600080fd5b60055460045460009165ffffffffffff9081169183916106799116426122a8565b9050831580156106895750818111155b1561069957505060035492915050565b60065460055460035465ffffffffffff770100000000000000000000000000000000000000000000008404169273ffffffffffffffffffffffffffffffffffffffff6601000000000000909304831692169060006106f684610eeb565b60065490915060019074010000000000000000000000000000000000000000900460ff1661072a5761072784610eeb565b90505b600654600090610776908490849060ff750100000000000000000000000000000000000000000082048116917601000000000000000000000000000000000000000000009004166110d7565b90506000846107906a52b7d2dcc80cd2e4000000846122bb565b61079a9190612301565b905060008c806107bd57506107ba896a52b7d2dcc80cd2e400000061233c565b82115b806107db57506107d8896a52b7d2dcc80cd2e40000006122a8565b82105b9050806107f35750939b9a5050505050505050505050565b6003839055600480547fffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000164265ffffffffffff16908117909155604080518581526020810189905290810191909152929586937ed4fe314618b73a96886b87817a53a5ed51433b0234c85a5e9dafe2cb7b88429060600160405180910390a150949c9b505050505050505050505050565b606060006108906111da565b61089b858585611279565b91509150935093915050565b6108af610e98565b6108b9600061149c565b565b6108c36111da565b6108d08585858585611511565b5050505050565b6000816108ef6a52b7d2dcc80cd2e4000000856122bb565b6108f99190612301565b90505b92915050565b61090a610e98565b6109357f00000000000000000000000000000000000000000000000000000000000000008383611669565b5050565b610941610e98565b61099981805160015560208101516002805460409093015160ff166301000000027fffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000090931662ffffff90921691909117919091179055565b50565b6109a4610e98565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610a0c57600080fd5b505af1158015610a20573d6000803e3d6000fd5b50505050565b610a2e610e98565b6040517fc23a5cea00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063c23a5cea906024015b600060405180830381600087803b158015610ab857600080fd5b505af11580156108d0573d6000803e3d6000fd5b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa158015610b59573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7d919061234f565b905090565b6040517fb760faf90000000000000000000000000000000000000000000000000000000081523060048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063b760faf99034906024016000604051808303818588803b158015610ab857600080fd5b60006a52b7d2dcc80cd2e40000006108ef83856122bb565b610c2a610e98565b610c406a52b7d2dcc80cd2e400000060026122bb565b81511115610caf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f54504d3a207072696365206d61726b757020746f6f206869676800000000000060448201526064015b60405180910390fd5b80516a52b7d2dcc80cd2e40000001115610d25576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f54504d3a207072696365206d61726b757020746f6f206c6f77000000000000006044820152606401610ca6565b805160088190556020808301805160098054604080880180516060808b01805165ffffffffffff908116760100000000000000000000000000000000000000000000027fffffffff000000000000ffffffffffffffffffffffffffffffffffffffffffff948216700100000000000000000000000000000000027fffffffffffffffffffff000000000000000000000000000000000000000000009098166fffffffffffffffffffffffffffffffff9a8b161797909717939093169590951790955582519889529551909416958701959095529151831685850152905190911690830152517fcd938817f1c47094d43be3d07e8c67e11766db2e11a2b4376e7ee937b15793a29181900360800190a150565b610e3f610e98565b73ffffffffffffffffffffffffffffffffffffffff8116610e8f576040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260006004820152602401610ca6565b6109998161149c565b60005473ffffffffffffffffffffffffffffffffffffffff1633146108b9576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610ca6565b60008060008060008573ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610f3e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f629190612382565b94509450509350935060008313610fd5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f54504d3a20436861696e6c696e6b207072696365203c3d2030000000000000006044820152606401610ca6565b610fe26202a300426122a8565b82101561104b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f54504d3a20496e636f6d706c65746520726f756e6400000000000000000000006044820152606401610ca6565b8369ffffffffffffffffffff168169ffffffffffffffffffff1610156110cd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f54504d3a205374616c65207072696365000000000000000000000000000000006044820152606401610ca6565b5090949350505050565b6000821561111c57600754859061110b906fffffffffffffffffffffffffffffffff166a52b7d2dcc80cd2e40000006122bb565b6111159190612301565b9450611153565b6007546fffffffffffffffffffffffffffffffff16611146866a52b7d2dcc80cd2e40000006122bb565b6111509190612301565b94505b811561119d5760075470010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff1661118c86866122bb565b6111969190612301565b90506111d2565b600754849061118c9070010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff16876122bb565b949350505050565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146108b9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f53656e646572206e6f7420456e747279506f696e7400000000000000000000006044820152606401610ca6565b6008546060906000908160346112936101008901896123d2565b905003905080600014806112a75750806020145b61130d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f54504d3a20696e76616c69642064617461206c656e67746800000000000000006044820152606401610ca6565b60095460035465ffffffffffff7001000000000000000000000000000000009092049190911660c08901350286019060009084906a52b7d2dcc80cd2e4000000028161135b5761135b6122d2565b0490508260200361139e5760006113766101008b018b6123d2565b6113859160549160349161243e565b61138e91612468565b90508181101561139c578091505b505b60006113aa83836108d7565b90506113e47f00000000000000000000000000000000000000000000000000000000000000006113dd60208d018d61218d565b30846116ef565b806113f260208c018c61218d565b60405160200161142292919091825273ffffffffffffffffffffffffffffffffffffffff16602082015260400190565b604080518083037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001815291905260095460045491985061148d91600091760100000000000000000000000000000000000000000000900465ffffffffffff90811691160181611735565b95505050505050935093915050565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600854600080611523868801886124a4565b9150915060006115336000610658565b90506000846a52b7d2dcc80cd2e4000000830281611553576115536122d2565b6009549190049150700100000000000000000000000000000000900465ffffffffffff1686028701600061158782846108d7565b9050808611156115c3576115be7f000000000000000000000000000000000000000000000000000000000000000086838903611669565b6115f9565b808610156115f9576115f97f000000000000000000000000000000000000000000000000000000000000000086308985036116ef565b60408051828152602081018b905290810185905273ffffffffffffffffffffffffffffffffffffffff8616907f46caa0511cf037f06f57a0bf273a2ff04229f5b12fb04675234a6cbe2e7f1a899060600160405180910390a261165b8461176f565b505050505050505050505050565b60405173ffffffffffffffffffffffffffffffffffffffff8381166024830152604482018390526116ea91859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061191c565b505050565b60405173ffffffffffffffffffffffffffffffffffffffff8481166024830152838116604483015260648201839052610a209186918216906323b872dd906084016116a3565b600060d08265ffffffffffff16901b60a08465ffffffffffff16901b8561175d576000611760565b60015b60ff16171790505b9392505050565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa1580156117fc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611820919061234f565b6009549091506fffffffffffffffffffffffffffffffff1681101561093557600061186b7f0000000000000000000000000000000000000000000000000000000000000000846119b2565b905061187681611ac2565b6040517fb760faf90000000000000000000000000000000000000000000000000000000081523060048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063b760faf99047906024016000604051808303818588803b1580156118fe57600080fd5b505af1158015611912573d6000803e3d6000fd5b5050505050505050565b600061193e73ffffffffffffffffffffffffffffffffffffffff841683611b3b565b9050805160001415801561196357508080602001905181019061196191906124d4565b155b156116ea576040517f5274afe700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84166004820152602401610ca6565b6040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152600090819073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015611a21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a45919061234f565b90506000611a68611a568386610c0a565b6002546301000000900460ff16611b49565b600154909150811015611a80576000925050506108fc565b600254611ab99086907f0000000000000000000000000000000000000000000000000000000000000000908590859062ffffff16611b69565b95945050505050565b6040517f49404b7c000000000000000000000000000000000000000000000000000000008152600481018290523060248201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906349404b7c90604401610a9e565b60606108f983836000611d31565b60006103e8611b5b60ff8416826124f1565b6108ef9061ffff16856122bb565b604080516101008101825273ffffffffffffffffffffffffffffffffffffffff87811682528681166020830190815262ffffff8581168486019081527f0000000000000000000000000000000000000000000000000000000000000000841660608601818152426080880190815260a088018c815260c089018c8152600060e08b018181529b517f414bf3890000000000000000000000000000000000000000000000000000000081528b518b16600482015298518a1660248a0152955190961660448801529151871660648701525160848601525160a4850152915160c4840152945190921660e482015263414bf38990610104016020604051808303816000875af1925050508015611cb8575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252611cb59181019061234f565b60015b611d24576040805173ffffffffffffffffffffffffffffffffffffffff808a16825288166020820152908101869052606081018590527ff7edd4c6ec425decf715a8b8eaa3b65d3d86e31ad0ff750aa60fa834190f515f9060800160405180910390a160009150611d27565b91505b5095945050505050565b606081471015611d6f576040517fcd786059000000000000000000000000000000000000000000000000000000008152306004820152602401610ca6565b6000808573ffffffffffffffffffffffffffffffffffffffff168486604051611d989190612513565b60006040518083038185875af1925050503d8060008114611dd5576040519150601f19603f3d011682016040523d82523d6000602084013e611dda565b606091505b5091509150611dea868383611df4565b9695505050505050565b606082611e0957611e0482611e83565b611768565b8151158015611e2d575073ffffffffffffffffffffffffffffffffffffffff84163b155b15611e7c576040517f9996b31500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85166004820152602401610ca6565b5080611768565b805115611e935780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060208284031215611ed757600080fd5b813563ffffffff8116811461176857600080fd5b73ffffffffffffffffffffffffffffffffffffffff8116811461099957600080fd5b60008060408385031215611f2057600080fd5b8235611f2b81611eeb565b946020939093013593505050565b801515811461099957600080fd5b600060208284031215611f5957600080fd5b813561176881611f39565b600080600060608486031215611f7957600080fd5b833567ffffffffffffffff811115611f9057600080fd5b84016101408187031215611fa357600080fd5b95602085013595506040909401359392505050565b60005b83811015611fd3578181015183820152602001611fbb565b50506000910152565b6040815260008351806040840152611ffb816060850160208801611fb8565b602083019390935250601f919091017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01601606001919050565b60008060008060006080868803121561204d57600080fd5b85356003811061205c57600080fd5b9450602086013567ffffffffffffffff8082111561207957600080fd5b818801915088601f83011261208d57600080fd5b81358181111561209c57600080fd5b8960208285010111156120ae57600080fd5b9699602092909201985095966040810135965060600135945092505050565b600080604083850312156120e057600080fd5b50508035926020909101359150565b60006060828403121561210157600080fd5b6040516060810181811067ffffffffffffffff8211171561214b577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405282358152602083013562ffffff8116811461216857600080fd5b6020820152604083013560ff8116811461218157600080fd5b60408201529392505050565b60006020828403121561219f57600080fd5b813561176881611eeb565b803565ffffffffffff811681146121c057600080fd5b919050565b6000608082840312156121d757600080fd5b6040516080810181811067ffffffffffffffff82111715612221577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040528235815260208301356fffffffffffffffffffffffffffffffff8116811461224b57600080fd5b602082015261225c604084016121aa565b604082015261226d606084016121aa565b60608201529392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b818103818111156108fc576108fc612279565b80820281158282048414176108fc576108fc612279565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082612337577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b808201808211156108fc576108fc612279565b60006020828403121561236157600080fd5b5051919050565b805169ffffffffffffffffffff811681146121c057600080fd5b600080600080600060a0868803121561239a57600080fd5b6123a386612368565b94506020860151935060408601519250606086015191506123c660808701612368565b90509295509295909350565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261240757600080fd5b83018035915067ffffffffffffffff82111561242257600080fd5b60200191503681900382131561243757600080fd5b9250929050565b6000808585111561244e57600080fd5b8386111561245b57600080fd5b5050820193919092039150565b803560208310156108fc577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b1692915050565b600080604083850312156124b757600080fd5b8235915060208301356124c981611eeb565b809150509250929050565b6000602082840312156124e657600080fd5b815161176881611f39565b61ffff82811682821603908082111561250c5761250c612279565b5092915050565b60008251612525818460208701611fb8565b919091019291505056fea26469706673582212204d43bd3f3b844c345b83768b8f40c3613a05b0b00d582b48ad67f0fbc3d445a764736f6c63430008170033";

type TokenPaymasterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenPaymasterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenPaymaster__factory extends ContractFactory {
  constructor(...args: TokenPaymasterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _token: PromiseOrValue<string>,
    _entryPoint: PromiseOrValue<string>,
    _wrappedNative: PromiseOrValue<string>,
    _uniswap: PromiseOrValue<string>,
    _tokenPaymasterConfig: TokenPaymaster.TokenPaymasterConfigStruct,
    _oracleHelperConfig: OracleHelper.OracleHelperConfigStruct,
    _uniswapHelperConfig: UniswapHelper.UniswapHelperConfigStruct,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TokenPaymaster> {
    return super.deploy(
      _token,
      _entryPoint,
      _wrappedNative,
      _uniswap,
      _tokenPaymasterConfig,
      _oracleHelperConfig,
      _uniswapHelperConfig,
      _owner,
      overrides || {}
    ) as Promise<TokenPaymaster>;
  }
  override getDeployTransaction(
    _token: PromiseOrValue<string>,
    _entryPoint: PromiseOrValue<string>,
    _wrappedNative: PromiseOrValue<string>,
    _uniswap: PromiseOrValue<string>,
    _tokenPaymasterConfig: TokenPaymaster.TokenPaymasterConfigStruct,
    _oracleHelperConfig: OracleHelper.OracleHelperConfigStruct,
    _uniswapHelperConfig: UniswapHelper.UniswapHelperConfigStruct,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _token,
      _entryPoint,
      _wrappedNative,
      _uniswap,
      _tokenPaymasterConfig,
      _oracleHelperConfig,
      _uniswapHelperConfig,
      _owner,
      overrides || {}
    );
  }
  override attach(address: string): TokenPaymaster {
    return super.attach(address) as TokenPaymaster;
  }
  override connect(signer: Signer): TokenPaymaster__factory {
    return super.connect(signer) as TokenPaymaster__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenPaymasterInterface {
    return new utils.Interface(_abi) as TokenPaymasterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenPaymaster {
    return new Contract(address, _abi, signerOrProvider) as TokenPaymaster;
  }
}
