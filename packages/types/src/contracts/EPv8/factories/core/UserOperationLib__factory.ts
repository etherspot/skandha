/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  UserOperationLib,
  UserOperationLibInterface,
} from "../../core/UserOperationLib";

const _abi = [
  {
    inputs: [],
    name: "PAYMASTER_DATA_OFFSET",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PAYMASTER_POSTOP_GAS_OFFSET",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PAYMASTER_VALIDATION_GAS_OFFSET",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523460195761010a908161001e823930815050f35b5f80fdfe60808060405260043610156011575f80fd5b5f3560e01c90816325093e1b1460a357508063b29a8ff41460705763ede31502146039575f80fd5b5f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112606c57602060405160348152f35b5f80fd5b5f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112606c57602060405160148152f35b5f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112606c5780602460209252f3fea26469706673582212206c0bddf76305c38ecee142d9696d895633bc04674f00f0bd1cf57310ef192c6264736f6c634300081c0033";

type UserOperationLibConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UserOperationLibConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UserOperationLib__factory extends ContractFactory {
  constructor(...args: UserOperationLibConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UserOperationLib> {
    return super.deploy(overrides || {}) as Promise<UserOperationLib>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): UserOperationLib {
    return super.attach(address) as UserOperationLib;
  }
  override connect(signer: Signer): UserOperationLib__factory {
    return super.connect(signer) as UserOperationLib__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UserOperationLibInterface {
    return new utils.Interface(_abi) as UserOperationLibInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UserOperationLib {
    return new Contract(address, _abi, signerOrProvider) as UserOperationLib;
  }
}
